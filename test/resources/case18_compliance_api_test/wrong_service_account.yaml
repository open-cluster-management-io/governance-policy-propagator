apiVersion: v1
kind: ServiceAccount
metadata:
  name: wrong-sa
  namespace: default
---
apiVersion: v1
kind: Secret
type: kubernetes.io/service-account-token
metadata:
  name: wrong-sa
  annotations:
    kubernetes.io/service-account.name: wrong-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: wrong-cluster-role
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: wrong-cluster-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: wrong-cluster-role
subjects:
- kind: ServiceAccount
  name: wrong-sa
  namespace: default
---
# This ensures role bindings (not cluster role bindings) are ignored in the test
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: wrong-cluster-role-bound-with-role-binding
rules:
- apiGroups:
  - cluster.open-cluster-management.io
  resources:
  - managedclusters
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: wrong-cluster-role-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: wrong-cluster-role-bound-with-role-binding
subjects:
- kind: ServiceAccount
  name: wrong-sa
  namespace: default